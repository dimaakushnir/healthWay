/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// Burger\r\nlet body = document.querySelector('body');\r\nlet burger = document.querySelector('.header__burger');\r\nlet header_mobile = document.querySelector('.header__mobile');\r\n\r\nif (burger) {\r\n    burger.addEventListener('click', function (event) {\r\n        event.preventDefault();\r\n\r\n        body.classList.toggle('lock');\r\n        burger.classList.toggle('active');\r\n        header_mobile.classList.toggle('show');\r\n    })\r\n}\r\n\r\n// Динамічний адаптив\r\nlet da_elements = document.querySelectorAll('[data-da]');\r\nlet parents_original = [];\r\nlet attr_elements = [];\r\nlet attr_element = [];\r\nlet match_media = [];\r\n\r\nfor (let item of da_elements) {\r\n    let parentChildren = item.parentElement.children;\r\n    for (let i = 0; i < parentChildren.length; i++) {\r\n        if (parentChildren[i] == item) {\r\n            parents_original.push({\r\n                'parent': item.parentElement,\r\n                'index': i\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nfor (let item of da_elements) {\r\n    attr_elements.push(item.dataset.da);\r\n}\r\n\r\nfor (let i = 0; i < attr_elements.length; i++) {\r\n    match_media.push(window.matchMedia(\"(max-width:\" + attr_elements[i].split(', ')[2] + \"px)\"));\r\n    match_media[i].addEventListener('change', dinamic_adapt);\r\n}\r\n\r\nfunction dinamic_adapt() {\r\n    for (let i = 0; i < match_media.length; i++) {\r\n        if (match_media[i].matches) {\r\n            attr_element = attr_elements[i].split(', ');\r\n            document.querySelector(`.${attr_element[0]}`).insertBefore(da_elements[i], document.querySelector(`.${attr_element[0]}`).children[attr_element[1]]);\r\n        } else {\r\n            parents_original[i].parent.insertBefore(da_elements[i], parents_original[i].parent.children[parents_original[i].index]);\r\n        }\r\n    }\r\n}\r\ndinamic_adapt();\r\n\r\n\r\n// IBG\r\nlet ibg = document.querySelectorAll('.ibg');\r\n\r\nfor (let item of ibg) {\r\n    let ibgImg = item.querySelector('img');\r\n    let ibgImgSrc = ibgImg.getAttribute('src');\r\n    item.style.backgroundImage = `url(${ibgImgSrc})`;\r\n}\r\n\r\n// Calendar\r\nif (document.querySelector('.form__calendar')) {\r\n    var freeDates = ['2023-8-19', '2023-8-20', '2023-8-21', '2023-8-26', '2023-8-27', '2023-8-28', '2023-8-29', '2023-8-30', '2023-8-31', '2023-9-1', '2023-9-2'];\r\n    var busyDates = [];\r\n\r\n    function calendar(id, year, month, allFreeDates, allBusyDates) {\r\n        var Dlast = new Date(year, month + 1, 0).getDate(),\r\n            D = new Date(year, month, Dlast),\r\n            DNlast = new Date(D.getFullYear(), D.getMonth(), Dlast).getDay(),\r\n            DNfirst = new Date(D.getFullYear(), D.getMonth(), 1).getDay(),\r\n            calendar = '<tr>',\r\n            monthNames = [\"Січень\", \"Лютий\", \"Березень\", \"Квітень\", \"Травень\", \"Червень\", \"Липень\", \"Серпень\", \"Вересень\", \"Жовтень\", \"Листопад\", \"Грудень\"];\r\n\r\n        // Дні попереднього місяця\r\n        var prevMonthDays = DNfirst === 0 ? 6 : DNfirst - 1;\r\n        var prevMonthYear = month === 0 ? year - 1 : year;\r\n        var prevMonth = month === 0 ? 11 : month - 1;\r\n        var prevMonthLastDay = new Date(prevMonthYear, prevMonth + 1, 0).getDate();\r\n\r\n        // Обчислюємо кількість клітинок для попереднього місяця\r\n        var prevMonthCells = prevMonthDays + 1;\r\n        var prevMonthStartDay = prevMonthLastDay - prevMonthDays + 1;\r\n\r\n        // Дні наступного місяця\r\n        var nextMonthDays = DNlast === 0 ? 0 : 7 - DNlast;\r\n        var totalDays = prevMonthCells + Dlast + nextMonthDays;\r\n        if (totalDays < 35) {\r\n            nextMonthDays += 7; // Додати додатковий тиждень наступного місяця\r\n        }\r\n\r\n        // Рядки для попереднього місяця\r\n        for (var i = 1; i < prevMonthCells; i++) {\r\n            calendar += '<td class=\"prev-month\"><span>' + (prevMonthStartDay + i) + '</span>';\r\n        }\r\n\r\n        // Функція для зміни стилів обраних дат\r\n        function toggleDateStyle(target) {\r\n            var selectedDates = document.querySelectorAll('.selected-date');\r\n            selectedDates.forEach(function (date) {\r\n                date.classList.remove('selected-date');\r\n            });\r\n\r\n            if (target && target.classList.contains('free-date')) {\r\n                target.classList.add('selected-date');\r\n\r\n                var selectedDate = year + '-' + (month + 1) + '-' + target.textContent;\r\n                document.querySelector('.form__input_calendar').value = selectedDate;\r\n                console.log(document.querySelector('.form__input_calendar').value);\r\n            }\r\n        }\r\n\r\n        // Рядки для поточного місяця\r\n        for (var i = 1; i <= Dlast; i++) {\r\n            var currentDate = year + '-' + (month + 1) + '-' + i;\r\n            var isFreeDate = allFreeDates.includes(currentDate);\r\n            var isBusyDate = allBusyDates.includes(currentDate);\r\n\r\n            if (isFreeDate) {\r\n                calendar += '<td class=\"free-date\"><span>' + i + '</span>';\r\n            } else if (isBusyDate) {\r\n                calendar += '<td class=\"busy-date\"><span>' + i + '</span>';\r\n            } else {\r\n                if (i == new Date().getDate() && D.getFullYear() == new Date().getFullYear() && D.getMonth() == new Date().getMonth()) {\r\n                    calendar += '<td class=\"today\"><span>' + i + '</span>';\r\n                } else {\r\n                    calendar += '<td><span>' + i + '</span>';\r\n                }\r\n            }\r\n\r\n            if (new Date(D.getFullYear(), D.getMonth(), i).getDay() == 0) {\r\n                calendar += '<tr>';\r\n            }\r\n        }\r\n\r\n        // Рядки для наступного місяця\r\n        for (var i = 1; i <= nextMonthDays; i++) {\r\n            var currentDate = year + '-' + (month + 2) + '-' + i;\r\n            var isFreeDate = allFreeDates.includes(currentDate);\r\n            var isBusyDate = allBusyDates.includes(currentDate);\r\n\r\n            if (isFreeDate) {\r\n                calendar += '<td class=\"next-month free-date\"><span>' + i + '</span>';\r\n            } else if (isBusyDate) {\r\n                calendar += '<td class=\"next-month busy-date\"><span>' + i + '</span>';\r\n            } else {\r\n                calendar += '<td class=\"next-month\"><span>' + i + '</span>';\r\n            }\r\n\r\n            if (new Date(D.getFullYear(), D.getMonth(), Dlast + i).getDay() == 0) {\r\n                calendar += '<tr>';\r\n            }\r\n        }\r\n\r\n        document.querySelector('#' + id + ' tbody').innerHTML = calendar;\r\n        document.querySelector('#' + id + ' thead td:nth-child(2)').innerHTML = monthNames[D.getMonth()] + ' ' + D.getFullYear();\r\n        document.querySelector('#' + id + ' thead td:nth-child(2)').dataset.month = D.getMonth();\r\n        document.querySelector('#' + id + ' thead td:nth-child(2)').dataset.year = D.getFullYear();\r\n\r\n        // Додаємо обробник події click до вільних дат\r\n        var freeDateCells = document.querySelectorAll('.free-date');\r\n        freeDateCells.forEach(function (cell) {\r\n            cell.addEventListener('click', function () {\r\n                toggleDateStyle(this);\r\n            });\r\n        });\r\n\r\n        // Перевіряємо, чи поточний місяць збігається з відображуваним місяцем і відключаємо кнопку \"назад\", якщо так\r\n        var prevButton = document.querySelector('.arrow_left');\r\n        if (new Date().getFullYear() === year && new Date().getMonth() === month) {\r\n            prevButton.classList.add('disabled');\r\n        } else {\r\n            prevButton.classList.remove('disabled');\r\n        }\r\n    }\r\n\r\n    window.onload = function () {\r\n        var currentDate = new Date();\r\n        var year = currentDate.getFullYear();\r\n        var month = currentDate.getMonth();\r\n        calendar(\"calendar\", year, month, freeDates, busyDates);\r\n    };\r\n\r\n    // Переключатель минус месяц\r\n    document.querySelector('#calendar thead tr:nth-child(1) td:nth-child(1)').addEventListener('click', function (event) {\r\n        if (!event.target.parentElement.classList.contains('disabled')) {\r\n            var year = parseFloat(document.querySelector('#calendar thead td:nth-child(2)').dataset.year);\r\n            var month = parseFloat(document.querySelector('#calendar thead td:nth-child(2)').dataset.month) - 1;\r\n            if (month < 0) {\r\n                month = 11;\r\n                year--;\r\n            }\r\n            calendar(\"calendar\", year, month, freeDates, busyDates);\r\n        }\r\n    });\r\n\r\n    // Переключатель плюс месяц\r\n    document.querySelector('#calendar thead tr:nth-child(1) td:nth-child(3)').onclick = function () {\r\n        var year = parseFloat(document.querySelector('#calendar thead td:nth-child(2)').dataset.year);\r\n        var month = parseFloat(document.querySelector('#calendar thead td:nth-child(2)').dataset.month) + 1;\r\n        if (month > 11) {\r\n            month = 0;\r\n            year++;\r\n        }\r\n        calendar(\"calendar\", year, month, freeDates, busyDates);\r\n    };\r\n}\r\n\r\n\r\n// Blog Slider\r\nif (document.querySelector('.blog-general__swiper')) {\r\n    const blogSwiper = new Swiper('.blog-general__swiper', {\r\n        allowTouchMove: false,\r\n\r\n        // If we need pagination\r\n        pagination: {\r\n            el: '.blog-general__pagination',\r\n            clickable: true,\r\n            renderBullet: function (index, className) {\r\n                return '<span class=\"' + className + '\">' + (index + 1) + '</span>';\r\n            },\r\n        },\r\n\r\n        // Navigation arrows\r\n        navigation: {\r\n            nextEl: '.blog-general__button_next',\r\n            prevEl: '.blog-general__button_prev',\r\n        },\r\n    })\r\n}\r\n\r\n\r\n// forms\r\nlet form = document.querySelector('form');\r\n\r\nif (form) {\r\n    form.addEventListener('submit', function (event) {\r\n        event.preventDefault();\r\n    })\r\n}\r\n\r\n\r\n// Dashboard Burger\r\nlet sidebar_burger = document.querySelector('.welcome-top-block__burger');\r\nlet sidebar = document.querySelector('.sidebar');\r\nlet sidebar_close = document.querySelector('.sidebar__close');\r\n\r\nif (sidebar_burger) {\r\n    sidebar_burger.addEventListener('click', function (event) {\r\n        sidebar.classList.add('active');\r\n    })\r\n}\r\n\r\nif (sidebar_close) {\r\n    sidebar_close.addEventListener('click', function (event) {\r\n        event.preventDefault();\r\n\r\n        sidebar.classList.remove('active');\r\n    })\r\n}\r\n\r\n\r\n// Profile Doctor Image\r\nlet profile_form_image_input = document.getElementById('profileFormImage');\r\nlet profile_form_image_preview = document.getElementById('profileformPreview');\r\n\r\nif (profile_form_image_input) {\r\n    profile_form_image_input.addEventListener('change', function () {\r\n        uploadImage(profile_form_image_input.files[0]);\r\n    })\r\n\r\n    function uploadImage(file) {\r\n        let reader = new FileReader();\r\n        reader.addEventListener('load', function (e) {\r\n            profile_form_image_preview.innerHTML = `<img src=\"${e.target.result}\" alt=\"Фото\">`;\r\n        });\r\n        reader.readAsDataURL(file);\r\n    }\r\n}\r\n\r\n\r\n//  Profile Doctor Certificates Placeholder\r\nlet certificates_profile_doctor_search_input = document.querySelector('.certificates-profile-doctor__search-input');\r\n\r\nif (certificates_profile_doctor_search_input) {\r\n    function handleScreenChange(e) {\r\n        if (e.matches) {\r\n            certificates_profile_doctor_search_input.placeholder = 'Введіть назву ...';\r\n        } else {\r\n            certificates_profile_doctor_search_input.placeholder = 'Введіть назву сертифікату ...';\r\n        }\r\n    }\r\n\r\n    let mediaQuery = window.matchMedia('(max-width: 360px)');\r\n\r\n    mediaQuery.addListener(handleScreenChange);\r\n\r\n    handleScreenChange(mediaQuery);\r\n}\r\n\r\n\r\n// Graphs\r\nif (document.querySelector('.main-dashboard-admin__graphs')) {\r\n    Chart.register(ChartDataLabels);\r\n\r\n    // Graphs (Composition-patients)\r\n    var ctx = document.getElementById('сomposition-patients').getContext('2d');\r\n\r\n    if (ctx) {\r\n        // Визначити дані для графіку\r\n        var data = {\r\n            labels: ['Старі пацієнти', 'Нові пацієнти'],\r\n            datasets: [{\r\n                data: [66, 34], // Відсотки для параметрів\r\n                backgroundColor: ['#D1F2F2', '#0EBBB7'], // Кольори для секторів\r\n                hoverBackgroundColor: ['#D1F2F2', '#0EBBB7'],\r\n                borderWidth: 0,\r\n                borderColor: ['#D1F2F2', '#0EBBB7'],\r\n                borderWidth: [0, 18], // Встановлення різних ширин бордерів для кожної дуги\r\n                borderRadius: [0, 50],\r\n            }]\r\n        };\r\n\r\n        let сomposition_patients_procent = document.querySelector('.graphs-main-dashboard-admin__procent');\r\n        сomposition_patients_procent.innerHTML = data.datasets[0].data[1] + '%';\r\n\r\n        var myChart = new Chart(ctx, {\r\n            type: 'doughnut',\r\n            data: data,\r\n            options: {\r\n                hover: {\r\n                    mode: null, // Відключення hover\r\n                },\r\n                cutout: '65%',\r\n                plugins: {\r\n                    legend: {\r\n                        display: false,\r\n                        position: 'left',\r\n                        labels: {\r\n                            usePointStyle: true,\r\n                            boxWidth: 12, // Ширина квадратика з кольором\r\n                            boxHeight: 12, // Висота квадратика з кольором\r\n                        }\r\n                    },\r\n                    datalabels: {\r\n                        display: false, // Заборонити показ значень дуг\r\n                    },\r\n                },\r\n                tooltips: {\r\n                    enabled: false, // Заборонити відображення підказок\r\n                },\r\n                onHover: function (event, elements) {\r\n                    if (elements.length > 0) {\r\n                        elements[0].dataset.tooltip = 'hidden';\r\n                    }\r\n                    chart.update();\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    // Graphs (Visiting Patients)\r\n    const visPat = document.getElementById('visiting-patients').getContext('2d');\r\n\r\n    if (visPat) {\r\n        var originalData = [70, 30, 90, 80, 30, 100]; // Початкові значення даних\r\n        var shiftedData = originalData.map(value => value * 1.20);\r\n\r\n        new Chart(visPat, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: ['Січ', 'Лют', 'Бер', 'Квіт', 'Трав', 'Черв'],\r\n                datasets: [{\r\n                    data: originalData,\r\n                    backgroundColor: [\r\n                        'rgba(14, 187, 183, 0.19)',\r\n                        'rgba(14, 187, 183, 0.40)',\r\n                        'rgba(14, 187, 183, 0.58)',\r\n                        'rgba(14, 187, 183, 0.76)',\r\n                        'rgba(14, 187, 183, 0.93)',\r\n                        'rgba(14, 187, 183, 1)',\r\n                    ],\r\n                    borderSkipped: '',\r\n                    borderRadius: { topLeft: 51 },\r\n                    borderWidth: { left: 3, right: 3 },\r\n                    borderColor: 'transparent',\r\n                    maxBarThickness: 40,\r\n                }]\r\n            },\r\n            options: {\r\n                // maintainAspectRatio: false,\r\n                plugins: {\r\n                    legend: {\r\n                        display: false,\r\n                        labels: {\r\n                            font: {\r\n                                size: 20\r\n                            }\r\n                        }\r\n                    },\r\n                    datalabels: {\r\n                        anchor: 'end', // Позиція даних над стовпчиками\r\n                        align: 'top', // Вирівнювання даних\r\n                        color: '#0EBBB7',\r\n                        font: {\r\n                            weight: '400',\r\n                            size: '13'\r\n                        }\r\n                    },\r\n                },\r\n                scales: {\r\n                    x: {\r\n                        grid: {\r\n                            display: false,\r\n                        },\r\n                        ticks: {\r\n                            font: {\r\n                                weight: '600', // Вага шрифту для підписів по осі x\r\n                                size: 13 // Розмір шрифту для підписів по осі x\r\n                            },\r\n                            color: 'rgba(8, 69, 74, 0.57)' // Колір підписів по осі x\r\n                        },\r\n                    },\r\n                    y: {\r\n                        display: false,\r\n                        max: Math.max(...shiftedData),\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    },\r\n                },\r\n                tooltips: {\r\n                    enabled: false, // Заборонити відображення підказок\r\n                },\r\n                onHover: function (event, elements) {\r\n                    if (elements.length > 0) {\r\n                        elements[0].dataset.tooltip = 'hidden';\r\n                    }\r\n                    chart.update();\r\n                }\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\n// Phone input before\r\nlet phone_inputs = document.querySelectorAll('.add-block-dashboard-doctors__input_phone');\r\nlet phone_item = document.querySelector('.add-block-dashboard-doctors__item_phone');\r\n\r\nif (phone_inputs) {\r\n    phone_inputs.forEach(function (phone_input) {\r\n        phone_input.addEventListener('focus', function (event) {\r\n            phone_input.parentElement.classList.add('focus');\r\n        })\r\n\r\n        phone_input.addEventListener('blur', function (event) {\r\n            phone_input.parentElement.classList.remove('focus');\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// Add doctors btn\r\nlet add_doctors_btn = document.querySelector('.main-dashboard-doctors__btn');\r\nlet add_doctors_block = document.querySelector('.main-dashboard-doctors__add-block');\r\nlet add_doctors_form = document.querySelector('.add-block-dashboard-doctors__form');\r\n\r\nif (add_doctors_btn) {\r\n    add_doctors_btn.addEventListener('click', function (event) {\r\n        event.preventDefault();\r\n\r\n        add_doctors_btn.classList.toggle('active');\r\n        add_doctors_block.classList.toggle('active');\r\n\r\n        if (!add_doctors_block.classList.contains('active')) {\r\n            add_doctors_form.reset();\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// Profile Doctor Image\r\nlet add_doctors_image = document.getElementById('doctorsFormImage');\r\nlet add_doctors_imag_preview = document.getElementById('doctorsformPreview');\r\n\r\nif (add_doctors_image) {\r\n    add_doctors_image.addEventListener('change', function () {\r\n        uploadDoctorsImage(add_doctors_image.files[0]);\r\n    })\r\n\r\n    function uploadDoctorsImage(file) {\r\n        let reader = new FileReader();\r\n        reader.addEventListener('load', function (e) {\r\n            add_doctors_imag_preview.innerHTML = `<img src=\"${e.target.result}\" alt=\"Фото\">`;\r\n        });\r\n        reader.readAsDataURL(file);\r\n    }\r\n}\r\n\r\n\r\n// Edit doctors\r\nlet doctors_edit_btns = document.querySelectorAll('.doctors-edit-btn');\r\n\r\nif (doctors_edit_btns) {\r\n    doctors_edit_btns.forEach(function (doctors_edit_btn) {\r\n        doctors_edit_btn.addEventListener('click', function (event) {\r\n            event.preventDefault();\r\n\r\n            doctors_edit_btn.classList.toggle('active');\r\n\r\n            let thisParent = doctors_edit_btn.closest('.body-table-list__row');\r\n            let doctors_edit_inputs = thisParent.querySelectorAll('.doctors-edt-input');\r\n            let doctors_edit_image = thisParent.querySelector('.doctor-edit-image-block');\r\n\r\n            if (doctors_edit_btn.classList.contains('active')) {\r\n                doctors_edit_inputs.forEach(function (doctors_edit_input) {\r\n                    doctors_edit_input.classList.add('active');\r\n                    doctors_edit_input.value = doctors_edit_input.nextElementSibling.textContent.trim().replace(/\\s+/g, ' ');\r\n                    doctors_edit_input.nextElementSibling.style.display = 'none';\r\n                    doctors_edit_image.classList.add('active');\r\n                })\r\n            } else {\r\n                doctors_edit_inputs.forEach(function (doctors_edit_input) {\r\n                    doctors_edit_input.classList.remove('active');\r\n                    doctors_edit_input.nextElementSibling.textContent = doctors_edit_input.value.trim();\r\n                    doctors_edit_input.nextElementSibling.style.display = 'block';\r\n                    doctors_edit_image.classList.remove('active');\r\n                })\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n// Edit Doctors Image\r\nlet edit_doctors_images = document.querySelectorAll('.doctor-edit-image-input');\r\n\r\nif (edit_doctors_images) {\r\n    edit_doctors_images.forEach(function (edit_doctors_image) {\r\n\r\n        let edit_doctors_image_preview;\r\n\r\n        edit_doctors_image.addEventListener('change', function () {\r\n            uploadEditDoctorsImage(edit_doctors_image.files[0]);\r\n\r\n            edit_doctors_image_preview = edit_doctors_image.previousElementSibling;\r\n        })\r\n\r\n        function uploadEditDoctorsImage(file) {\r\n            let reader = new FileReader();\r\n            reader.addEventListener('load', function (e) {\r\n                edit_doctors_image_preview.innerHTML = `<img src=\"${e.target.result}\" alt=\"Фото\">`;\r\n            });\r\n            reader.readAsDataURL(file);\r\n        }\r\n    })\r\n}\r\n\r\n// Delite doctor\r\nlet doctors_delite_btns = document.querySelectorAll('.doctors-delite-btn');\r\n\r\nif (doctors_delite_btns) {\r\n    doctors_delite_btns.forEach(function (doctors_delite_btn) {\r\n        doctors_delite_btn.addEventListener('click', function (event) {\r\n            event.preventDefault();\r\n\r\n            doctors_delite_btn.closest('.body-table-list__row').remove();\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// ashboard services item\r\nif (document.querySelector('.top-item-dashboard-services__click')) {\r\n    $(\".top-item-dashboard-services__click\").click(function () {\r\n        $(this).parent().next().slideToggle(500);\r\n        $(this).parent().toggleClass(\"active\");\r\n    });\r\n}\r\n\r\n\r\n// Edit Services\r\nlet services_edit_btns = document.querySelectorAll('.services-edit-btn');\r\n\r\nif (services_edit_btns) {\r\n    services_edit_btns.forEach(function (services_edit_btn) {\r\n        services_edit_btn.addEventListener('click', function (event) {\r\n            event.preventDefault();\r\n\r\n            services_edit_btn.classList.toggle('active');\r\n\r\n            let thisParent = services_edit_btn.closest('.services-main-dashboard-services__item');\r\n            let services_edit_inputs = thisParent.querySelectorAll('.services-edit-input');\r\n            let services_edit_images = thisParent.querySelectorAll('.services-edit-image-block');\r\n\r\n            if (services_edit_btn.classList.contains('active')) {\r\n                services_edit_inputs.forEach(function (services_edit_input) {\r\n                    services_edit_input.classList.add('active');\r\n                    services_edit_input.value = services_edit_input.nextElementSibling.textContent.trim().replace(/\\s+/g, ' ');\r\n                    services_edit_input.nextElementSibling.style.display = 'none';\r\n\r\n                    services_edit_images.forEach(function (services_edit_image) {\r\n                        services_edit_image.classList.add('active');\r\n                    })\r\n                })\r\n            } else {\r\n                services_edit_inputs.forEach(function (services_edit_input) {\r\n                    services_edit_input.classList.remove('active');\r\n                    services_edit_input.nextElementSibling.textContent = services_edit_input.value.trim();\r\n                    services_edit_input.nextElementSibling.style.display = 'block';\r\n\r\n                    services_edit_images.forEach(function (services_edit_image) {\r\n                        services_edit_image.classList.remove('active');\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n// Edit Services Image\r\nlet edit_services_images = document.querySelectorAll('.services-edit-image-input');\r\n\r\nif (edit_services_images) {\r\n    edit_services_images.forEach(function (edit_services_image) {\r\n\r\n        let edit_services_image_preview;\r\n\r\n        edit_services_image.addEventListener('change', function () {\r\n            uploadEditServicesImage(edit_services_image.files[0]);\r\n\r\n            edit_services_image_preview = edit_services_image.previousElementSibling;\r\n        })\r\n\r\n        function uploadEditServicesImage(file) {\r\n            let reader = new FileReader();\r\n            reader.addEventListener('load', function (e) {\r\n                edit_services_image_preview.innerHTML = `<img src=\"${e.target.result}\" alt=\"Фото\">`;\r\n            });\r\n            reader.readAsDataURL(file);\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// Price input before\r\nlet price_inputs = document.querySelectorAll('.add-block-dashboard-services__input_price');\r\n\r\nif (price_inputs) {\r\n    price_inputs.forEach(function (price_input) {\r\n        price_input.addEventListener('focus', function (event) {\r\n            price_input.parentElement.classList.add('focus');\r\n        })\r\n\r\n        price_input.addEventListener('blur', function (event) {\r\n            price_input.parentElement.classList.remove('focus');\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// Add Services Image\r\nlet add_services_images = document.querySelectorAll('.images-add-block-dashboard-services__input-file');\r\n\r\nif (add_services_images) {\r\n    add_services_images.forEach(function (add_services_image) {\r\n        add_services_image.addEventListener('change', function () {\r\n            uploadAddServicesImage(add_services_image.files[0]);\r\n        })\r\n\r\n        let add_services_image_preview = add_services_image.previousElementSibling;\r\n\r\n        function uploadAddServicesImage(file) {\r\n            let reader = new FileReader();\r\n            reader.addEventListener('load', function (e) {\r\n                add_services_image_preview.innerHTML = `<img src=\"${e.target.result}\" alt=\"Фото\">`;\r\n            });\r\n            reader.readAsDataURL(file);\r\n        }\r\n    })\r\n\r\n\r\n}\r\n\r\n\r\n// Add Services Block\r\nlet main_dashboard_services_btn = document.querySelector('.main-dashboard-services__btn');\r\nlet main_dashboard_services_add_block = document.querySelector('.main-dashboard-services__add-block');\r\n\r\nif (main_dashboard_services_btn) {\r\n    main_dashboard_services_btn.addEventListener('click', function (event) {\r\n        event.preventDefault();\r\n\r\n        main_dashboard_services_btn.classList.toggle('active');\r\n        main_dashboard_services_add_block.classList.toggle('active');\r\n    })\r\n}\r\n\r\n\r\n\r\n// Popup patient info Open\r\nlet patient_info_btns = document.querySelectorAll('.patient-info-btn');\r\nlet patient_info = document.querySelector('.patient-info');\r\nlet patient_info_text = document.querySelector('.patient-info__text');\r\nlet patient_info_name = document.querySelector('.patient-info__bottom');\r\n\r\n\r\nif (patient_info_btns) {\r\n    patient_info_btns.forEach(function (patient_info_btn) {\r\n        patient_info_btn.addEventListener('click', function (event) {\r\n            event.preventDefault();\r\n\r\n            patient_info.classList.add('open');\r\n            body.classList.add('lock');\r\n            patient_info_text.innerHTML = patient_info_btn.dataset.info;\r\n            patient_info_name.innerHTML = '-' + patient_info_btn.closest('.body-table-list__row').querySelector('.patient-name').innerHTML;\r\n        })\r\n    })\r\n}\r\n\r\n// Popup patient info Close\r\nlet patient_info_close = document.querySelector('.patient-info__close');\r\n\r\nif (patient_info_close) {\r\n    patient_info_close.addEventListener('click', function (event) {\r\n        event.preventDefault();\r\n\r\n        patientInfoClose();\r\n    })\r\n}\r\n\r\ndocument.addEventListener('keydown', function (event) {\r\n    if (event.code === 'Escape' && patient_info.classList.contains('open')) {\r\n        patientInfoClose();\r\n    }\r\n});\r\n\r\nfunction patientInfoClose() {\r\n    body.classList.remove('lock');\r\n    patient_info.classList.remove('open');\r\n}\r\n\r\n\r\n// Full Calendar Doctor\r\nif (document.getElementById('calendar-doctor')) {\r\n    $(document).ready(function () {\r\n        moment.updateLocale('uk', {\r\n            weekdays: [\"Неділя\", \"Понеділок\", \"Вівторок\", \"Середа\", \"Четвер\", \"П'ятниця\", \"Субота\"],\r\n            weekdaysShort: [\"Нед\", \"Пон\", \"Вів\", \"Сер\", \"Чет\", \"П'ят\", \"Суб\"],\r\n        });\r\n\r\n        var eventsAll = [\r\n            {\r\n                title: 'Назва запису',\r\n                start: '2023-08-09T10:00:00',\r\n                end: '2023-08-09T12:00:00',\r\n                className: 'event-type-active',\r\n                descriptionTitle: 'Паціенти',\r\n                image: '<img class=\"event-icon\" src=\"img/icons/green-icon.png\" alt=\"\">',\r\n                description: \"Прізвище Ім'я\",\r\n            },\r\n            {\r\n                title: 'Назва запису',\r\n                start: '2023-08-10T09:00:00',\r\n                end: '2023-08-10T10:00:00',\r\n                className: 'event-type-cancelled',\r\n                descriptionTitle: 'Паціенти',\r\n                image: '<img class=\"event-icon\" src=\"img/icons/green-icon.png\" alt=\"\">',\r\n                description: \"Прізвище Ім'я\",\r\n            },\r\n        ];\r\n\r\n        $('#calendar-doctor').fullCalendar({\r\n            locale: 'uk', // Встановлення локалізації на українську\r\n            header: {\r\n                left: 'prev, title, next',\r\n                center: '',\r\n                right: ''\r\n            },\r\n            events: eventsAll,\r\n            // Підказка\r\n            eventRender: function (event, element) {\r\n                element.qtip({\r\n                    content: {\r\n                        text: '<div class=\"qtip-content\">' +\r\n                            '<div class=\"qtip-title\">' + event.descriptionTitle + '</div>' +\r\n                            '<div class=\"qtip-image-text\">' +\r\n                            event.image + event.description +\r\n                            '</div>' +\r\n                            '</div>'\r\n                    },\r\n                    position: {\r\n                        target: 'mouse', // Позиція підказки відносно курсору миші\r\n                        my: 'left center', // Позиція підказки\r\n                        at: 'right center',\r\n                        viewport: $('#calendar'), // Вказуємо обмеження відображення підказки\r\n                        adjust: {\r\n                            x: 10 // Відступ від події\r\n                        }\r\n                    },\r\n                    style: {\r\n                        classes: 'qtip-light qtip-rounded', // Стилізація підказки\r\n                        tip: {\r\n                            corner: true, // Показувати \"шпильку\" підказки\r\n                            width: 10, // Ширина \"шпильки\"\r\n                            height: 10 // Висота \"шпильки\"\r\n                        }\r\n                    },\r\n                    show: {\r\n                        event: 'mouseenter', // Відображення підказки при ховері\r\n                        solo: true // Забезпечити одночасний показ тільки однієї підказки\r\n                    },\r\n                    hide: {\r\n                        event: 'unfocus click' // Сховати підказку при кліку або втраті фокусу\r\n                    }\r\n                });\r\n            },\r\n            defaultView: 'agendaWeek',\r\n            // editable: true, // Редагування подій\r\n            titleFormat: 'MMMM DD, YYYY', // Формат заголовка календаря\r\n            minTime: '08:00:00',\r\n            maxTime: '23:00:00',\r\n            slotLabelFormat: 'H:mm',\r\n            slotDuration: '01:00:00', // Встановлюємо тривалість слота як одну годину\r\n            // Функція для виведення заголовків днів тижня з числами\r\n            dayRender: function (date, cell) {\r\n                renderDayHeader(date, cell);\r\n            },\r\n            // Функція, яка викликається при переключенні тижнів та при завантаженні календаря\r\n            viewRender: function (view, element) {\r\n                $('.fc-day-header').each(function () {\r\n                    var date = moment($(this).attr('data-date'));\r\n                    renderDayHeader(date, $(this));\r\n                });\r\n            },\r\n        });\r\n        // Отримуємо всі елементи з класом .fc-day-header та обробляємо кожен з них окремо\r\n        function renderDayHeader(date, cell) {\r\n            var weekday = date.format('ddd');\r\n            var day = date.format('D');\r\n            var headerHtml = '<span class=\"fc-day-header-weekday\">' + weekday + '</span><br>' +\r\n                '<span class=\"fc-day-header-day\">' + day + '</span>';\r\n            cell.html(headerHtml);\r\n        }\r\n\r\n        // Показати лише активні події\r\n        document.getElementById('showType1Events').addEventListener('click', function () {\r\n            this.classList.toggle('active');\r\n\r\n            if (this.classList.contains('active')) {\r\n                document.querySelectorAll('.fc-event').forEach(function (event) {\r\n                    event.classList.add('hide');\r\n\r\n                    document.querySelectorAll('.event-type-active').forEach(function (eventActive) {\r\n                        eventActive.classList.remove('hide');\r\n                    })\r\n                })\r\n            } else {\r\n                document.querySelectorAll('.fc-event').forEach(function (event) {\r\n                    event.classList.remove('hide');\r\n                })\r\n            }\r\n        })\r\n    });\r\n\r\n    // Функція для першої великої літери у назві місяця\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    // Full Calendar Agenda\r\n    if (document.querySelector('.agenda-full-calendar')) {\r\n        let dropdownBlock = document.querySelector('.agenda-full-calendar');\r\n        let dropdownButton = document.querySelector('.agenda-full-calendar__button');\r\n        let dropdownList = document.querySelector('.agenda-full-calendar__list');\r\n        let dropdownListItems = document.querySelectorAll('.agenda-full-calendar__list-item');\r\n        let dropdownInputHidden = document.querySelector('.full-calendar__input-hidden');\r\n\r\n        dropdownButton.addEventListener('click', function (event) {\r\n            event.preventDefault();\r\n\r\n            this.classList.toggle('active');\r\n            dropdownList.classList.toggle('visible');\r\n            dropdownBlock.classList.toggle('active');\r\n\r\n            dropdownListItems.forEach(function (dropdownListItem) {\r\n                if (dropdownListItem.textContent === dropdownButton.textContent) {\r\n                    dropdownListItem.classList.toggle('hide');\r\n                }\r\n            })\r\n        })\r\n\r\n        dropdownListItems.forEach(function (listItem) {\r\n            listItem.addEventListener('click', function (event) {\r\n                event.stopPropagation();\r\n\r\n                dropdownButton.focus();\r\n                dropdownButton.innerHTML = this.innerHTML;\r\n                dropdownInputHidden.value = this.dataset.dropdown;\r\n                dropdownList.classList.remove('visible');\r\n                dropdownButton.classList.remove('active');\r\n                dropdownBlock.classList.remove('active');\r\n\r\n                var selectedView = $('#viewSelector').val();\r\n                $('#calendar-doctor').fullCalendar('changeView', selectedView);\r\n\r\n                dropdownListItems.forEach(function (dropdownListItem) {\r\n                    dropdownListItem.classList.remove('hide');\r\n                })\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Full Calendar Admin\r\nif (document.getElementById('calendar-admin')) {\r\n    $(document).ready(function () {\r\n        moment.updateLocale('uk', {\r\n            weekdays: [\"Неділя\", \"Понеділок\", \"Вівторок\", \"Середа\", \"Четвер\", \"П'ятниця\", \"Субота\"],\r\n            weekdaysShort: [\"Нед\", \"Пон\", \"Вів\", \"Сер\", \"Чет\", \"П'ят\", \"Суб\"],\r\n        });\r\n\r\n        var eventsAll = [\r\n            {\r\n                title: 'Назва запису',\r\n                start: '2023-08-08T10:00:00',\r\n                end: '2023-08-08T12:00:00',\r\n                className: 'event-type-active',\r\n                descriptionTitle1: 'Паціенти',\r\n                image1: '<img class=\"event-icon\" src=\"img/icons/green-icon.png\" alt=\"\">',\r\n                description1: \"Прізвище Ім'я\",\r\n                descriptionTitle2: 'Лікар',\r\n                image2: '<img class=\"event-icon\" src=\"img/icons/green-icon.png\" alt=\"\">',\r\n                description2: \"Лук'янчук Іванна\"\r\n            },\r\n            {\r\n                title: 'Назва запису',\r\n                start: '2023-08-10T10:00:00',\r\n                end: '2023-08-10T11:00:00',\r\n                className: 'event-type-cancelled',\r\n                descriptionTitle1: 'Паціенти',\r\n                image1: '<img class=\"event-icon\" src=\"img/icons/green-icon.png\" alt=\"\">',\r\n                description1: \"Прізвище Ім'я\",\r\n                descriptionTitle2: 'Лікар',\r\n                image2: '<img class=\"event-icon\" src=\"img/icons/green-icon.png\" alt=\"\">',\r\n                description2: \"Лук'янчук Іванна\"\r\n            },\r\n            {\r\n                title: 'Назва запису',\r\n                start: '2023-08-11T10:00:00',\r\n                end: '2023-08-11T12:00:00',\r\n                className: 'event-type-active',\r\n                descriptionTitle1: 'Паціенти',\r\n                image1: '<img class=\"event-icon\" src=\"img/icons/green-icon.png\" alt=\"\">',\r\n                description1: \"Прізвище Ім'я\",\r\n                descriptionTitle2: 'Лікар',\r\n                image2: '<img class=\"event-icon\" src=\"img/icons/green-icon.png\" alt=\"\">',\r\n                description2: \"Лук'янчук Іванна\"\r\n            }\r\n        ];\r\n\r\n        var calendar_admin = $('#calendar-admin').fullCalendar({\r\n            locale: 'uk', // Встановлення локалізації на українську\r\n            header: {\r\n                left: 'prev, title, next',\r\n                center: '',\r\n                right: ''\r\n            },\r\n            defaultView: 'agendaWeek',\r\n            events: eventsAll,\r\n            // Підказка\r\n            eventRender: function (event, element) {\r\n                element.qtip({\r\n                    content: {\r\n                        text: '<div class=\"qtip-content\">' +\r\n                            '<div class=\"qtip-buttons\">' +\r\n                            '<button class=\"edit-button\">Редагувати</button>' +\r\n                            '<button class=\"delete-button\">Видалити</button>' +\r\n                            '</div>' +\r\n                            '<div class=\"qtip-title\">' + event.descriptionTitle1 + '</div>' +\r\n                            '<div class=\"qtip-image-text\">' +\r\n                            event.image1 + event.description1 +\r\n                            '</div>' +\r\n                            '<div class=\"qtip-title\">' + event.descriptionTitle2 + '</div>' +\r\n                            '<div class=\"qtip-image-text\">' +\r\n                            event.image2 + event.description2 +\r\n                            '</div>' +\r\n                            '</div>'\r\n                    },\r\n                    events: {\r\n                        render: function () {\r\n                            var qtipContent = $('.qtip-content');\r\n\r\n                            qtipContent.find('.edit-button').click(function () {\r\n                                // Відкрити форму редагування зі значеннями події\r\n                                openEditForm(event);\r\n                            });\r\n\r\n                            qtipContent.find('.delete-button').click(function () {\r\n                                element.addClass('event-type-cancelled');\r\n                            });\r\n                        }\r\n                    },\r\n                    position: {\r\n                        target: 'mouse', // Позиція підказки відносно курсору миші\r\n                        my: 'left center', // Позиція підказки\r\n                        at: 'right center',\r\n                        viewport: $('#calendar'), // Вказуємо обмеження відображення підказки\r\n                        adjust: {\r\n                            x: 10 // Відступ від події\r\n                        }\r\n                    },\r\n                    style: {\r\n                        classes: 'qtip-light qtip-rounded', // Стилізація підказки\r\n                        tip: {\r\n                            corner: true, // Показувати \"шпильку\" підказки\r\n                            width: 10, // Ширина \"шпильки\"\r\n                            height: 10 // Висота \"шпильки\"\r\n                        }\r\n                    },\r\n                    show: {\r\n                        event: 'mouseenter', // Відображення підказки при ховері\r\n                        solo: true // Забезпечити одночасний показ тільки однієї підказки\r\n                    },\r\n                    hide: {\r\n                        event: 'unfocus click' // Сховати підказку при кліку або втраті фокусу\r\n                    }\r\n                });\r\n            },\r\n\r\n            editable: true, // Редагування подій\r\n\r\n            titleFormat: 'MMMM DD, YYYY', // Формат заголовка календаря\r\n            minTime: '08:00:00',\r\n            maxTime: '23:00:00',\r\n            slotLabelFormat: 'H:mm',\r\n            slotDuration: '01:00:00', // Встановлюємо тривалість слота як одну годину\r\n\r\n            // Функція для виведення заголовків днів тижня з числами\r\n            dayRender: function (date, cell) {\r\n                renderDayHeader(date, cell);\r\n            },\r\n            // Функція, яка викликається при переключенні тижнів та при завантаженні календаря\r\n            viewRender: function (view, element) {\r\n                $('.fc-day-header').each(function () {\r\n                    var date = moment($(this).attr('data-date'));\r\n                    renderDayHeader(date, $(this));\r\n                });\r\n            },\r\n        });\r\n\r\n        // Отримуємо всі елементи з класом .fc-day-header та обробляємо кожен з них окремо\r\n        function renderDayHeader(date, cell) {\r\n            var weekday = date.format('ddd');\r\n            var day = date.format('D');\r\n            var headerHtml = '<span class=\"fc-day-header-weekday\">' + weekday + '</span><br>' +\r\n                '<span class=\"fc-day-header-day\">' + day + '</span>';\r\n            cell.html(headerHtml);\r\n        }\r\n    });\r\n\r\n    // Функція для першої великої літери у назві місяця\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n    // Full Calendar Agenda\r\n    if (document.querySelector('.agenda-full-calendar')) {\r\n        let dropdownBlock = document.querySelector('.agenda-full-calendar');\r\n        let dropdownButton = document.querySelector('.agenda-full-calendar__button');\r\n        let dropdownList = document.querySelector('.agenda-full-calendar__list');\r\n        let dropdownListItems = document.querySelectorAll('.agenda-full-calendar__list-item');\r\n        let dropdownInputHidden = document.querySelector('.full-calendar__input-hidden');\r\n\r\n        dropdownButton.addEventListener('click', function (event) {\r\n            event.preventDefault();\r\n\r\n            this.classList.toggle('active');\r\n            dropdownList.classList.toggle('visible');\r\n            dropdownBlock.classList.toggle('active');\r\n\r\n            dropdownListItems.forEach(function (dropdownListItem) {\r\n                if (dropdownListItem.textContent === dropdownButton.textContent) {\r\n                    dropdownListItem.classList.toggle('hide');\r\n                }\r\n            })\r\n        })\r\n\r\n        dropdownListItems.forEach(function (listItem) {\r\n            listItem.addEventListener('click', function (event) {\r\n                event.stopPropagation();\r\n\r\n                dropdownButton.focus();\r\n                dropdownButton.innerHTML = this.innerHTML;\r\n                dropdownInputHidden.value = this.dataset.dropdown;\r\n                dropdownList.classList.remove('visible');\r\n                dropdownButton.classList.remove('active');\r\n                dropdownBlock.classList.remove('active');\r\n\r\n                var selectedView = $('#viewSelector').val();\r\n                $('#calendar-admin').fullCalendar('changeView', selectedView);\r\n\r\n                dropdownListItems.forEach(function (dropdownListItem) {\r\n                    dropdownListItem.classList.remove('hide');\r\n                })\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n// Full Calendar Doctors Сhoice\r\nif (document.querySelector('.doctors-full-calendar__input')) {\r\n    let fullCalendarDoctorsInput = document.querySelector('.doctors-full-calendar__input');\r\n    let fullCalendarDoctors = document.querySelector('.doctors-full-calendar');\r\n    let fullCalendarDoctorsInputBlock = document.querySelector('.doctors-full-calendar__input-block');\r\n    let fullCalendarDoctorsItemsLinks = document.querySelectorAll('.doctors-full-calendar__link');\r\n\r\n    fullCalendarDoctorsInput.addEventListener('click', function (event) {\r\n        fullCalendarDoctorsInput.classList.add('hide');\r\n        fullCalendarDoctors.classList.add('active');\r\n        fullCalendarDoctorsInputBlock.classList.add('show');\r\n\r\n        fullCalendarDoctorsItemsLinks.forEach(function (fullCalendarDoctorsItemLink) {\r\n            fullCalendarDoctorsItemLink.addEventListener('click', function (event) {\r\n                event.preventDefault();\r\n\r\n                fullCalendarDoctorsInput.value = fullCalendarDoctorsItemLink.innerHTML.trim().replace(/\\s+/g, ' ');\r\n                fullCalendarDoctorsInput.classList.remove('hide');\r\n                fullCalendarDoctors.classList.remove('active');\r\n                fullCalendarDoctorsInputBlock.classList.remove('show');\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// Phone input before\r\nlet phone_fullCalendar_input = document.querySelector('.add-block-calendar-admin__input_tel');\r\n\r\nif (phone_fullCalendar_input) {\r\n    phone_fullCalendar_input.addEventListener('focus', function (event) {\r\n        phone_fullCalendar_input.parentElement.classList.add('focus');\r\n    })\r\n\r\n    phone_fullCalendar_input.addEventListener('blur', function (event) {\r\n        phone_fullCalendar_input.parentElement.classList.remove('focus');\r\n    })\r\n}\r\n\r\n\r\n// Full Calendar Add Doctors\r\nif (document.querySelector('.doctors-add-block-calendar-admin__input')) {\r\n    let fullCalendarDoctorsInput = document.querySelector('.doctors-add-block-calendar-admin__input');\r\n    let fullCalendarDoctors = document.querySelector('.doctors-add-block-calendar-admin');\r\n    let fullCalendarDoctorsInputBlock = document.querySelector('.doctors-add-block-calendar-admin__input-block');\r\n    let fullCalendarDoctorsItemsLinks = document.querySelectorAll('.doctors-add-block-calendar-admin__link');\r\n\r\n    fullCalendarDoctorsInput.addEventListener('click', function (event) {\r\n        fullCalendarDoctorsInput.classList.add('hide');\r\n        fullCalendarDoctors.classList.add('active');\r\n        fullCalendarDoctorsInputBlock.classList.add('show');\r\n\r\n        fullCalendarDoctorsItemsLinks.forEach(function (fullCalendarDoctorsItemLink) {\r\n            fullCalendarDoctorsItemLink.addEventListener('click', function (event) {\r\n                event.preventDefault();\r\n\r\n                fullCalendarDoctorsInput.value = fullCalendarDoctorsItemLink.innerHTML.trim().replace(/\\s+/g, ' ');\r\n                fullCalendarDoctorsInput.classList.remove('hide');\r\n                fullCalendarDoctors.classList.remove('active');\r\n                fullCalendarDoctorsInputBlock.classList.remove('show');\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\n// Full Calendar Add Block\r\nlet fullCalendarBtnCreate = document.querySelector('.full-calendar__btn-create');\r\nlet fullCalendarAddBlock = document.querySelector('.main-calendar-admin__add-block');\r\n\r\nif (fullCalendarBtnCreate) {\r\n    fullCalendarBtnCreate.addEventListener('click', function (event) {\r\n        event.preventDefault();\r\n\r\n        fullCalendarBtnCreate.classList.toggle('active');\r\n        fullCalendarAddBlock.classList.toggle('active');\r\n    })\r\n}\n\n//# sourceURL=webpack://gulp-2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;